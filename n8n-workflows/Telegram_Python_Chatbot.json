{
  "name": "Telegram Python Chatbot",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message?.text || $json.transcripcion || $json.error }}",
        "options": {
          "systemMessage": "res un asistente virtual llamado [Nombre de tu Bot, ej., \"Beto el Bot\"] diseñado para interactuar en un chatbot de Telegram.\nTu función principal es ayudar a los usuarios con sus preguntas de manera **amigable, clara y eficiente.**\n\n---\n**DIRECTRICES OBLIGATORIAS PARA CADA RESPUESTA:**\n\n1.  **TONO Y ESTILO:**\n    * Siempre usa un tono **conversacional, cercano e informal pero respetuoso.**\n    * Habla de manera natural, como si estuvieras charlando con una persona.\n    * Evita el lenguaje robótico, repetitivo o demasiado formal.\n    * Siempre utiliza frases completas y coherentes.\n\n2.  **PROHIBICIONES ESTRICTAS (MUY IMPORTANTE):**\n    * **BAJO NINGUNA CIRCUNSTANCIA DEBES USAR EMOJIS.** Los emojis no están permitidos en ninguna parte de tu respuesta.\n    * **BAJO NINGUNA CIRCUNSTANCIA DEBES USAR CARACTERES ESPECIALES O SÍMBOLOS DECORATIVOS** (ej., flechas, asteriscos, guiones, viñetas, barras, caracteres Unicode extraños) a menos que sean parte de una URL o un código de programación requerido.\n    * **NO uses formato de texto especial** (ej., negritas, cursivas, subrayado, monoespaciado) a menos que el usuario lo solicite explícitamente para una palabra clave o sea estrictamente necesario para presentar código.\n    * **NO uses listas numeradas o con viñetas** a menos que el usuario pida pasos o enumeraciones explícitamente. Mantén las respuestas fluidas en párrafos.\n\n3.  **COMPRENSIÓN Y CLARIDAD:**\n    * Responde directamente a la pregunta del usuario.\n    * Si no entiendes algo, pide aclaración de forma educada.\n    * Si no sabes la respuesta, dilo amablemente y ofrece redirigir o sugerir otra pregunta.\n\n---\n**EJEMPLO DE INTERACCIÓN (Sigue este estilo):**\n\nUsuario: Hola, ¿cómo estás?\nAsistente: ¡Hola! Estoy muy bien, gracias por preguntar. ¿En qué puedo ayudarte hoy?\n\nUsuario: Necesito ayuda con mi código de Python.\nAsistente: Claro, con gusto te ayudo. ¿Qué problema estás teniendo con tu código de Python?\n\n---\n**PENSAMIENTO INTERNO ANTES DE RESPONDER (IGNORA ESTO AL USUARIO):**\nAntes de generar la respuesta final, revisaré que no contenga emojis, caracteres especiales decorativos, formato excesivo o listas no solicitadas. Me aseguraré de que el tono sea amigable y natural, y que el lenguaje sea directo y claro."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        480,
        20
      ],
      "id": "a50657a3-f83c-4c4f-94b7-87e2496e060c",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        500,
        220
      ],
      "id": "ed658844-2268-46ae-a950-96862702c948",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "binaryData": true,
        "binaryPropertyName": "={{ 'data' }}",
        "additionalFields": {
          "caption": "={{ $json.output }}",
          "fileName": "respuesta_chatbot.mp3"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        980,
        20
      ],
      "id": "c0891327-37ec-4b78-9333-ad2b42855c16",
      "name": "Telegram",
      "webhookId": "3aab119b-d0ff-4218-b5aa-e7a5ba9b5089",
      "credentials": {
        "telegramApi": {
          "id": "tl4SBrjuUoflcDNk",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://gvp8xq83-5000.use2.devtunnels.ms/text-to-audio",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "API-KEY",
              "value": "hola12345678"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        840,
        20
      ],
      "id": "ea3fa25a-952a-4710-9957-e93ff0d3bff0",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-chat-v3-0324:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        400,
        220
      ],
      "id": "1e956cf9-6ded-45d4-8dc4-39ebc296deb0",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "1cTw1OxALIzwOjbs",
          "name": "OpenRouter account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        80,
        -180
      ],
      "id": "7e58e19c-6fd2-4f91-bb6c-5e32e16df884",
      "name": "Telegram1",
      "webhookId": "b433a53f-c5a9-4e1c-a3cc-7edcb4d0c151",
      "credentials": {
        "telegramApi": {
          "id": "tl4SBrjuUoflcDNk",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://gvp8xq83-5000.use2.devtunnels.ms/audio-to-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "API-KEY",
              "value": "hola12345678"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "audio",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        280,
        -180
      ],
      "id": "c448978d-d520-40d4-986c-c5a3c11dc350",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "updates": [
          "*"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -300,
        0
      ],
      "id": "3d33a525-da20-45b6-862b-3f7b8097a230",
      "name": "Telegram Trigger",
      "webhookId": "fed1300b-faed-4993-82f7-e044ef960c20",
      "credentials": {
        "telegramApi": {
          "id": "tl4SBrjuUoflcDNk",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "782e49f0-f4f9-4d54-ab5a-4edea7dfed24",
              "leftValue": "={{ $json.message.voice }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -120,
        0
      ],
      "id": "eda65f90-ecd6-4883-b0c9-77d17e10de8f",
      "name": "If"
    }
  ],
  "pinData": {},
  "connections": {
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5d7da54b-61f5-4cd7-b68f-a8df51132b34",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2e3017ce5d3e6b2e1c8a46598ffa5c759bc93766f1a48132c71795607eac8f30"
  },
  "id": "77a83ROnn1LuyIej",
  "tags": []
}